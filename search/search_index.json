{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Welcome to MkDocs","text":"<p>For full documentation visit mkdocs.org.</p>"},{"location":"#commands","title":"Commands","text":"<ul> <li><code>mkdocs new [dir-name]</code> - Create a new project.</li> <li><code>mkdocs serve</code> - Start the live-reloading docs server.</li> <li><code>mkdocs build</code> - Build the documentation site.</li> <li><code>mkdocs -h</code> - Print help message and exit.</li> </ul>"},{"location":"#project-layout","title":"Project layout","text":"<pre><code>mkdocs.yml    # The configuration file.\ndocs/\n    index.md  # The documentation homepage.\n    ...       # Other markdown pages, images and other files.\n</code></pre>"},{"location":"android/cling-in-java/","title":"Cling in java","text":""},{"location":"android/cling-in-java/#1-three-important-concepts-in-cling","title":"1. Three important concepts in cling","text":"<p>Before you start using the Cling framework, you must understand three concepts.</p> <ul> <li><code>Device</code>: an abstract concept, specific examples such as tv, dvd, and router in our life.</li> <li><code>Service</code>: just like class in Orient-Object language.</li> <li><code>Action</code>: equal to function in common program language.</li> </ul> <p>Take our smartphone device as an example. It has multimedia, communication, and storage services. Under the multimedia service, you can execute actions such as set volume or play control. The follow is a <code>Device-Service-Action</code> three-layer construct in Cling.</p> <p></p> <p>smartphone example </p>"},{"location":"android/cling-in-java/#2-implement-smartphone-example","title":"2. Implement smartphone example","text":"<p>Through the above image, we can hava a preliminary image of the Device-Service-Action three-layer architecture. Next, we will implement Smartphone Example by java code.</p> <ul> <li>Create a maven project and import related dependencies (Note: Please use <code>apache-maven-3.6.3</code>, the higher versions don't allow use HTTP repository url directly)</li> </ul> <pre><code>&lt;project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n         xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\"&gt;\n  &lt;modelVersion&gt;4.0.0&lt;/modelVersion&gt;\n\n  &lt;groupId&gt;org.example&lt;/groupId&gt;\n  &lt;artifactId&gt;cling-in-java&lt;/artifactId&gt;\n  &lt;version&gt;1.0-SNAPSHOT&lt;/version&gt;\n  &lt;packaging&gt;jar&lt;/packaging&gt;\n\n  &lt;name&gt;cling-in-java&lt;/name&gt;\n  &lt;url&gt;http://maven.apache.org&lt;/url&gt;\n\n  &lt;properties&gt;\n    &lt;project.build.sourceEncoding&gt;UTF-8&lt;/project.build.sourceEncoding&gt;\n    &lt;jetty.version&gt;8.1.14.v20131031&lt;/jetty.version&gt;\n    &lt;slf4j.version&gt;6.1.26&lt;/slf4j.version&gt;\n  &lt;/properties&gt;\n\n  &lt;dependencies&gt;\n    &lt;dependency&gt;\n      &lt;groupId&gt;commons-io&lt;/groupId&gt;\n      &lt;artifactId&gt;commons-io&lt;/artifactId&gt;\n      &lt;version&gt;2.11.0&lt;/version&gt;\n    &lt;/dependency&gt;\n\n    &lt;dependency&gt;\n      &lt;groupId&gt;org.eclipse.jetty&lt;/groupId&gt;\n      &lt;artifactId&gt;jetty-server&lt;/artifactId&gt;\n      &lt;version&gt;${jetty.version}&lt;/version&gt;\n    &lt;/dependency&gt;\n\n    &lt;dependency&gt;\n      &lt;groupId&gt;org.eclipse.jetty&lt;/groupId&gt;\n      &lt;artifactId&gt;jetty-servlet&lt;/artifactId&gt;\n      &lt;version&gt;${jetty.version}&lt;/version&gt;\n    &lt;/dependency&gt;\n\n    &lt;dependency&gt;\n      &lt;groupId&gt;org.eclipse.jetty&lt;/groupId&gt;\n      &lt;artifactId&gt;jetty-client&lt;/artifactId&gt;\n      &lt;version&gt;${jetty.version}&lt;/version&gt;\n    &lt;/dependency&gt;\n\n    &lt;dependency&gt;\n      &lt;groupId&gt;org.slf4j&lt;/groupId&gt;\n      &lt;artifactId&gt;slf4j-jdk14&lt;/artifactId&gt;\n      &lt;version&gt;1.7.25&lt;/version&gt;\n    &lt;/dependency&gt;\n\n    &lt;dependency&gt;\n      &lt;groupId&gt;org.fourthline.cling&lt;/groupId&gt;\n      &lt;artifactId&gt;cling-support&lt;/artifactId&gt;\n      &lt;version&gt;2.1.1&lt;/version&gt;\n    &lt;/dependency&gt;\n\n    &lt;dependency&gt;\n      &lt;groupId&gt;junit&lt;/groupId&gt;\n      &lt;artifactId&gt;junit&lt;/artifactId&gt;\n      &lt;version&gt;3.8.1&lt;/version&gt;\n      &lt;scope&gt;test&lt;/scope&gt;\n    &lt;/dependency&gt;\n\n    &lt;dependency&gt;\n      &lt;groupId&gt;org.fourthline.cling&lt;/groupId&gt;\n      &lt;artifactId&gt;cling-core&lt;/artifactId&gt;\n      &lt;version&gt;2.1.1&lt;/version&gt;\n    &lt;/dependency&gt;\n  &lt;/dependencies&gt;\n\n  &lt;repositories&gt;\n    &lt;repository&gt;\n      &lt;id&gt;nexus-4thline&lt;/id&gt;\n      &lt;!--Note: Please use `apache-maven-3.6.3`, the higher versions don't allow use HTTP repository url directly--&gt;\n      &lt;url&gt;http://4thline.org/m2/&lt;/url&gt;\n    &lt;/repository&gt;\n  &lt;/repositories&gt;\n&lt;/project&gt;\n</code></pre> <ul> <li>Creating a service and device (For simplicity, we only implement the multimedia service).</li> </ul> <pre><code>package org.example;\n\nimport org.fourthline.cling.binding.annotations.*;\n\n@UpnpService(\n        serviceId = @UpnpServiceId(MultiMediaService.SERVICE_ID),\n        serviceType = @UpnpServiceType(MultiMediaService.SERVICE_ID)\n)\npublic class MultiMediaService {\n    public static final String SERVICE_ID = \"MultiMediaService\";\n    public static final String ACTION_SET_VOLUME = \"SetVolume\";\n\n    @UpnpStateVariable(defaultValue = \"50\")\n    private String volume = \"50\"; // the UpnpStateVariable only support java.lang.String type\n\n    @UpnpAction\n    public void setVolume(@UpnpInputArgument(name = \"ExpiredVolumeValue\") String expiredVolumeValue) {\n        int volumeValue = Integer.parseInt(expiredVolumeValue);\n        if (volumeValue &lt; 0 || volumeValue &gt; 100) {\n            throw new IllegalArgumentException(String.format(\"VolumeValue range between [0, 100], you input value is %s\", volumeValue));\n        }\n        volume = expiredVolumeValue;\n    }\n\n    @UpnpAction(out = @UpnpOutputArgument(name = \"RealVolumeValue\"))\n    public String getVolume() {\n        return volume;\n    }\n}\n</code></pre> <pre><code>package org.example;\n\nimport org.fourthline.cling.binding.annotations.AnnotationLocalServiceBinder;\nimport org.fourthline.cling.model.DefaultServiceManager;\nimport org.fourthline.cling.model.ValidationException;\nimport org.fourthline.cling.model.meta.DeviceDetails;\nimport org.fourthline.cling.model.meta.DeviceIdentity;\nimport org.fourthline.cling.model.meta.LocalDevice;\nimport org.fourthline.cling.model.meta.LocalService;\nimport org.fourthline.cling.model.types.DeviceType;\nimport org.fourthline.cling.model.types.UDN;\n\npublic class SmartphoneDevice {\n    public static LocalDevice getInstance() {\n        DeviceIdentity deviceIdentity = new DeviceIdentity(UDN.uniqueSystemIdentifier(\"SmartphoneDevice\"));\n        DeviceType deviceType = new DeviceType(\"org.example\", \"SmartphoneDevice\");\n        DeviceDetails deviceDetails = new DeviceDetails(\"SmartphoneDevice\");\n\n        LocalService volumeControlService = new AnnotationLocalServiceBinder().read(MultiMediaService.class);\n        volumeControlService.setManager(new DefaultServiceManager(volumeControlService, MultiMediaService.class));\n\n        LocalDevice localDevice = null;\n        try {\n            localDevice = new LocalDevice(deviceIdentity, deviceType, deviceDetails, volumeControlService);\n            return localDevice;\n        } catch (ValidationException e) {\n            throw new RuntimeException(e);\n        }\n    }\n}\n</code></pre>"},{"location":"android/cling-in-java/#3-executing-action-in-custom-device","title":"3. Executing action in custom device","text":"<p>We have now created a smartphone device with multimedia service. Next, we will demonstrate how to execute the SetVolume action in this service. The invocation process is follow :</p> <p></p> <pre><code>package org.example;\n\nimport org.fourthline.cling.UpnpServiceImpl;\nimport org.fourthline.cling.controlpoint.ActionCallback;\nimport org.fourthline.cling.model.action.ActionInvocation;\nimport org.fourthline.cling.model.message.UpnpResponse;\nimport org.fourthline.cling.model.meta.Action;\nimport org.fourthline.cling.model.meta.LocalDevice;\nimport org.fourthline.cling.model.meta.LocalService;\nimport org.fourthline.cling.model.types.UDAServiceId;\nimport org.junit.Test;\n\npublic class AppTest\n{\n    @Test\n    public void testActionInvocation() {\n        // get smartphone device instance\n        LocalDevice localDevice = SmartphoneDevice.getInstance();\n        // find multiMediaService in device\n        LocalService service = localDevice.findService(new UDAServiceId(MultiMediaService.SERVICE_ID));\n        invocationActionSync(service);\n        invocationActionAsync(service);\n    }\n\n\n    public void invocationActionSync(LocalService service) {\n        UpnpServiceImpl upnpService = new UpnpServiceImpl();\n        Action action = service.getAction(MultiMediaService.ACTION_SET_VOLUME);\n        ActionInvocation actionInvocation = new ActionInvocation&lt;&gt;(action);\n        actionInvocation.setInput(\"ExpiredVolumeValue\", \"88\");\n        new ActionCallback.Default(actionInvocation, upnpService.getControlPoint()).run();\n    }\n\n    public void invocationActionAsync(LocalService service) {\n        UpnpServiceImpl upnpService = new UpnpServiceImpl();\n        Action action = service.getAction(MultiMediaService.ACTION_SET_VOLUME);\n        ActionInvocation actionInvocation = new ActionInvocation&lt;&gt;(action);\n        actionInvocation.setInput(\"ExpiredVolumeValue\", \"99\");\n        upnpService.getControlPoint().execute(new ActionCallback(actionInvocation) {\n            @Override\n            public void success(ActionInvocation invocation) {\n                System.out.println(invocation);\n            }\n\n            @Override\n            public void failure(ActionInvocation invocation, UpnpResponse operation, String defaultMsg) {\n                System.out.println(defaultMsg);\n            }\n        });\n\n        // Avoiding function complete immediately\n        try {\n            Thread.sleep(1000 * 60);\n        } catch (InterruptedException e) {\n            throw new RuntimeException(e);\n        }\n    }\n}\n</code></pre>"},{"location":"android/cling-in-java/#4-executing-action-in-network-device","title":"4. Executing action in network device","text":"<p>In the above example, we directly obtained the smartphone device instance through the <code>SmartphoneDevice.getInstance</code>. However, in the actual development process. we rarely customize devices, we only need to find special device in LAN (Local area network) ,then invocation action in this device.</p> <p>In the next, we will create two thread to simulate search device in LAN.</p> <ol> <li>The <code>ServeThread</code> provide smartphone device.</li> <li>The <code>ClientThread</code> find the device by network, then invocation action in this device.</li> </ol> <pre><code>package org.example;\n\nimport org.fourthline.cling.UpnpServiceImpl;\nimport org.fourthline.cling.binding.annotations.*;\nimport org.fourthline.cling.registry.Registry;\n\npublic class ServeThread implements Runnable {\n    public static void main(String[] args) {\n        Thread thread = new Thread(new ServeThread());\n        thread.setDaemon(false);\n        thread.start();\n    }\n\n    @Override\n    public void run() {\n        UpnpServiceImpl upnpService = new UpnpServiceImpl();\n        Registry registry = upnpService.getRegistry();\n        registry.addDevice(SmartphoneDevice.getInstance());\n    }\n}\n</code></pre> <pre><code>package org.example;\n\nimport org.fourthline.cling.UpnpServiceImpl;\nimport org.fourthline.cling.controlpoint.ActionCallback;\nimport org.fourthline.cling.model.action.ActionInvocation;\nimport org.fourthline.cling.model.message.UpnpResponse;\nimport org.fourthline.cling.model.meta.*;\nimport org.fourthline.cling.model.types.UDAServiceId;\nimport org.fourthline.cling.registry.Registry;\nimport org.fourthline.cling.registry.RegistryListener;\n\npublic class ClientThread implements Runnable, RegistryListener {\n    public static void main(String[] args) {\n        Thread thread = new Thread(new ClientThread());\n        thread.setDaemon(false);\n        thread.start();\n    }\n\n    @Override\n    public void run() {\n        UpnpServiceImpl upnpService = new UpnpServiceImpl();\n        Registry registry = upnpService.getRegistry();\n        registry.addListener(this);\n        upnpService.getControlPoint().search();\n    }\n\n    @Override\n    public void remoteDeviceDiscoveryStarted(Registry registry, RemoteDevice device) {\n\n    }\n\n    @Override\n    public void remoteDeviceDiscoveryFailed(Registry registry, RemoteDevice device, Exception ex) {\n\n    }\n\n    @Override\n    public void remoteDeviceAdded(Registry registry, RemoteDevice device) {\n        UDAServiceId udaServiceId = new UDAServiceId(MultiMediaService.SERVICE_ID);\n        RemoteService service = device.findService(udaServiceId);\n        if (service != null) {\n            // find the smartphone device\n            invocationActionSync(service);\n            invocationActionAsync(service);\n        }\n    }\n\n    @Override\n    public void remoteDeviceUpdated(Registry registry, RemoteDevice device) {\n\n    }\n\n    @Override\n    public void remoteDeviceRemoved(Registry registry, RemoteDevice device) {\n\n    }\n\n    @Override\n    public void localDeviceAdded(Registry registry, LocalDevice device) {\n\n    }\n\n    @Override\n    public void localDeviceRemoved(Registry registry, LocalDevice device) {\n\n    }\n\n    @Override\n    public void beforeShutdown(Registry registry) {\n\n    }\n\n    @Override\n    public void afterShutdown() {\n\n    }\n\n    public void invocationActionSync(Service service) {\n        UpnpServiceImpl upnpService = new UpnpServiceImpl();\n        Action action = service.getAction(MultiMediaService.ACTION_SET_VOLUME);\n        ActionInvocation actionInvocation = new ActionInvocation&lt;&gt;(action);\n        actionInvocation.setInput(\"ExpiredVolumeValue\", \"88\");\n        new ActionCallback.Default(actionInvocation, upnpService.getControlPoint()).run();\n    }\n\n    public void invocationActionAsync(Service service) {\n        UpnpServiceImpl upnpService = new UpnpServiceImpl();\n        Action action = service.getAction(MultiMediaService.ACTION_SET_VOLUME);\n\n        ActionInvocation actionInvocation = new ActionInvocation&lt;&gt;(action);\n        actionInvocation.setInput(\"ExpiredVolumeValue\", \"99\");\n\n        upnpService.getControlPoint().execute(new ActionCallback(actionInvocation) {\n            @Override\n            public void success(ActionInvocation invocation) {\n                System.out.println(invocation);\n            }\n\n            @Override\n            public void failure(ActionInvocation invocation, UpnpResponse operation, String defaultMsg) {\n                System.out.println(defaultMsg);\n            }\n        });\n\n        // Avoiding function complete immediately\n        try {\n            Thread.sleep(1000 * 60);\n        } catch (InterruptedException e) {\n            throw new RuntimeException(e);\n        }\n    }\n}\n</code></pre> <p>Because we have created two long-time keep alive thread, it is difficult to  verify action invocation by debugger. The best way is to print volume value in console after <code>setVolume</code> function end.</p> <p>When you print volume value, you will see twice output in console, one is sync , the other is async.</p>"},{"location":"android/cling-in-java/#5-reference","title":"5. Reference","text":"<ol> <li>Official document of Cling core</li> </ol>"},{"location":"gfw/airport-chapter1-V2Board/","title":"\u673a\u573a\u642d\u5efa\u7b2c\u4e00\u7bc7\uff1aV2Board \u642d\u5efa","text":""},{"location":"gfw/airport-chapter1-V2Board/#1","title":"1. \u51c6\u5907\u5de5\u4f5c","text":"<ul> <li>\u4e00\u53f0\u6d77\u5916\u670d\u52a1\u5668<ul> <li>\u63a8\u8350 \u9999\u6e2f \u5730\u533a\u7684\uff0c\u5927\u9646\u76f4\u8fde\u76f8\u8f83\u5176\u4ed6\u5730\u533a\uff08\u4e9a\u592a\uff0c\u6b27\u7f8e\uff09\u5ef6\u8fdf\u66f4\u4f4e\uff0c\u54cd\u5e94\u66f4\u5feb\u3002</li> <li>\u6700\u4f4e\u914d\u7f6e 2\u68382G\uff0c\u914d\u7f6e\u592a\u4f4e\u4f5c\u4e3a\u8282\u70b9\u670d\u52a1\u5668\u5728\u4f7f\u7528\u8fc7\u7a0b\u4e2d\u4f1a\u51fa\u73b0 Timeout \u8d85\u65f6\u60c5\u51b5\uff0c\u4e0d\u591f\u7a33\u5b9a\u3002</li> </ul> </li> <li>\u4e00\u4e2a\u4e0e\u8be5\u670d\u52a1\u5668\u7ed1\u5b9a\u7684\u57df\u540d\uff08\u57df\u540d\u7684\u8d2d\u4e70\u548c\u89e3\u6790\u8bf7\u81ea\u884c google\uff09</li> </ul>"},{"location":"gfw/airport-chapter1-V2Board/#2-v2board","title":"2. V2Board \u524d\u7aef\u9762\u677f\u5b89\u88c5","text":"<p>V2Board \u5982\u4f55\u5b89\u88c5\u65b9\u6cd5\u5728 \u5b98\u65b9\u6587\u6863 \u4e2d\u5df2\u7ecf\u89e3\u91ca\u7684\u5f88\u8be6\u7ec6\u4e86\uff0c\u4f46\u662f\u5bf9\u4e8e \u4e00\u4e9b\u57fa\u7840\u8584\u5f31\u7684\u65b0\u624b\u800c\u8a00\uff0c\u8fc7\u7a0b\u4e2d\u96be\u514d\u51fa\u73b0\u5404\u79cd\u5404\u6837\u7684\u95ee\u9898\u3002\u6211\u8fd9\u91cc\u518d\u6f14\u793a\u4e00\u904d\uff0c\u5e76\u5f3a\u8c03\u5728\u5b89\u88c5\u8fc7\u7a0b\u4e2d\u9700\u8981\u6ce8\u610f\u7684\u51e0\u4e2a\u70b9\u3002</p> <p>Tips</p> <p>\u5728\u5b89\u88c5\u4e4b\u524d\u6700\u597d\u6253\u4e2a \u5feb\u7167\uff0c\u4fbf\u4e8e\u4e2d\u9014\u51fa\u9519\u540e\u8fdb\u884c\u56de\u6eda\u64cd\u4f5c\uff0c\u6ca1\u6709\u5feb\u7167\u4f60\u53ea\u80fd\u901a\u8fc7\u91cd\u7f6e\u7cfb\u7edf\u6216\u6570\u636e\u76d8\u6765\u6062\u590d\u73af\u5883\u3002</p>"},{"location":"gfw/airport-chapter1-V2Board/#21-aapanel","title":"2.1  \u5b89\u88c5 aaPanel","text":"<p>aaPanel\uff0c\u6d77\u5916\u7248\u7684\u5b9d\u5854\u9762\u677f\uff0c\u540e\u7eed\u5927\u91cf\u64cd\u4f5c\u53ea\u9700\u5728\u9762\u677f\u4e0a\u8fdb\u884c\u3002 <pre><code>yum install -y wget &amp;&amp; wget -O install.sh http://www.aapanel.com/script/install_6.0_en.sh &amp;&amp; bash install.sh\n</code></pre> \u6267\u884c\u8be5\u547d\u4ee4\u540e\u4f60\u9700\u8981\u8fdb\u884c\u4e24\u6b21\u786e\u8ba4\u64cd\u4f5c\uff1a</p> <p>Do you want to install aaPanel to the /www directory now?(y/n) (\u5b89\u88c5\u4f4d\u7f6e\u786e\u8ba4) Do you need to enable the panel SSl ? (yes/n) (\u662f\u5426\u5f00\u542f SSL)</p> <p>\u7b2c\u4e00\u6b21\u786e\u8ba4\u65e0\u5173\u7d27\u8981\uff0c\u76f4\u63a5 y \u5373\u53ef\u3002\u7b2c\u4e8c\u6b21\u786e\u8ba4\u662f\u5173\u4e8e\u9762\u677f <code>SSL</code> \u7684\u8bbe\u7f6e\u3002</p> <ul> <li>\u5f53\u4f60\u8f93\u5165 yes \u5e76\u786e\u8ba4 \uff0c\u9762\u677f\u4f1a\u4f7f\u7528\u81ea\u7b7e\u8bc1\u4e66\u7528\u4e8e <code>SSL</code> \u8ba4\u8bc1\u3002</li> </ul> <p>\u81ea\u7b7e\u8bc1\u4e66\u6709\u4e2a\u5f88\u81f4\u547d\u7684\u7f3a\u70b9, \u7531\u4e8e\u5b83\u4e0d\u662f\u7531\u6743\u5a01\u7684 <code>CA\u673a\u6784</code> \u9881\u53d1\u7684\uff0c\u6240\u4ee5\u5f53\u4f60\u76f4\u63a5\u4f7f\u7528 https \u534f\u8bae \u8bbf\u95ee\u9762\u677f\u5730\u5740\u65f6\uff0c\u6d4f\u89c8\u5668\u4f1a \u5f39\u51fa \u4e0d\u5b89\u5168\u7684\u94fe\u63a5 \u63d0\u793a\uff0c\u4e3a\u4e86\u963b\u6b62\u8be5\u63d0\u793a\uff0c\u4f60\u53ea\u80fd\u5c06\u670d\u52a1\u5668\u7684\u8bc1\u4e66\u52a0\u5165\u5230\u4f60\u7684\u7535\u8111\u53d7\u4fe1\u4efb\u7684\u8bc1\u4e66\u5217\u8868\u4e2d\u3002\u4f46\u8fd9\u5f88\u663e\u7136\u4e0d\u662f\u4e00\u4e2a\u597d \u529e\u6cd5\uff0c\u8bd5\u60f3\u4e00\u4e0b\u5982\u679c\u4f60\u9700\u8981\u4f7f\u7528\u5176\u4ed6\u7684\u7535\u8111\u767b\u5f55\u9762\u677f\uff0c\u90a3\u4e48\u662f\u4e0d\u662f\u8fd8\u5f97\u518d\u6dfb\u52a0\u4e00\u6b21\u3002\u6211\u76f8\u4fe1\u6ca1\u51e0\u4e2a\u4eba\u53d7\u5f97\u4e86\u8fd9\u79cd\u64cd\u4f5c\u3002</p> <ul> <li>\u5f53\u4f60\u8f93\u5165 n\uff08no\uff09 \u5e76\u786e\u8ba4\uff0c\u90a3\u4e48\u6682\u65f6\u53ea\u80fd\u4f7f\u7528 <code>http</code> \u534f\u8bae\u8bbf\u95ee\u9762\u677f\u3002</li> <li>\u89e3\u91ca\u4e86\u8fd9\u4e48\u591a\uff0c\u8fd8\u662f\u76f4\u63a5\u9009 yes \u597d\u4e86\uff0c\u540e\u671f\u6211\u4f1a\u6559\u5927\u5bb6\u5982\u4f55\u4f7f\u7528 <code>LetsEncrypt</code> \u9881\u53d1\u7684\u8bc1\u4e66\uff0c\u8fd9\u6837\u6211\u4eec\u5c31\u80fd\u6109\u5feb\u7684\u4f7f\u7528   <code>https</code> \u6765\u8bbf\u95ee\u9762\u677f\u4e86\uff0c\u8fd9\u5e74\u5934\u4e00\u4e2a\u7f51\u7ad9\u4e0d\u7528 https \u771f\u7684\u8bf4\u4e0d\u8fc7\u53bb</li> </ul> <p>Tips</p> <p>\u811a\u672c\u8fd0\u884c\u5b8c\u6210\u540e\uff0c\u8fd8\u9700\u8981\u5bf9\u5916\u5f00\u653e\u670d\u52a1\u5668\u7684 7800 \u7aef\u53e3\uff08aaPanel\u7684\u8fd0\u884c\u7aef\u53e3\uff09\uff0c\u4ee5\u963f\u91cc\u4e91\u4e3a\u4f8b\uff0c\u8fdb\u5165\u5b89\u5168\u7ec4\u8fdb\u884c\u5bf9\u5e94\u64cd\u4f5c\u3002</p>"}]}